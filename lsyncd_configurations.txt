#/etc/lsyncd/cos7s01_cos7s02_ssh_rsync.conf
sync {
  default.rsync,
  source="/data",
  target="cos7s02:/data",
  rsync={
    binary = "/usr/local/sbin/rsync",
    acls = true,
    archive = true,
    compress = true,
    hard_links = true,
    one_file_system = true,
    sparse = true,
    update = true,
    verbose = true,
    whole_file = true,
    xattrs = true,
    _extra = { "--compress-choice=lz4" }
  },
  exclude = { "aquota.user", "aquota.group", "export.info.xml", "rsnapshot", ".zfs" },
  delay=60
}

sync {
  default.rsync,
  source="/data/test9",
  target="cos7s02:/data/test9",
  rsync={
    binary = "/usr/local/sbin/rsync",
    acls = true,
    archive = true,
    compress = true,
    hard_links = true,
    one_file_system = true,
    sparse = true,
    update = true,
    verbose = true,
    whole_file = true,
    xattrs = true,
    _extra = { "--compress-choice=lz4" }
  },
  exclude = { "aquota.user", "aquota.group", "export.info.xml", "rsnapshot", ".zfs" },
  delay=60
}

#/etc/lsyncd/cos7s01_cos7s02_rsync.conf
sync {
  default.rsync,
  source="/data",
  target="cos7s02::data",
  rsync={
    binary = "/usr/local/sbin/rsync",
    acls = true,
    archive = true,
    compress = true,
    hard_links = true,
    one_file_system = true,
    sparse = true,
    update = true,
    verbose = false,
    whole_file = true,
    xattrs = true,
    _extra = { "--compress-choice=lz4" }
  },
  exclude = { "aquota.user", "aquota.group", "export.info.xml", "rsnapshot", ".zfs" },
  delay=60
}

sync {
  default.rsync,
  source="/data/test9",
  target="cos7s02::data/test9",
  rsync={
    binary = "/usr/local/sbin/rsync",
    acls = true,
    archive = true,
    compress = true,
    hard_links = true,
    one_file_system = true,
    sparse = true,
    update = true,
    verbose = false,
    whole_file = true,
    xattrs = true,
    _extra = { "--compress-choice=lz4" }
  },
  exclude = { "aquota.user", "aquota.group", "export.info.xml", "rsnapshot", ".zfs" },
  delay=60
}

# rsyncd server configuration /etc/rsyncd.conf
# /etc/rsyncd: configuration file for rsync daemon mode

# See rsyncd.conf man page for more options.

# configuration example:

# uid = nobody
# gid = nobody
# use chroot = yes
# max connections = 4
# pid file = /var/run/rsyncd.pid
# exclude = lost+found/
# transfer logging = yes
# timeout = 900
# ignore nonreadable = yes
# dont compress   = *.gz *.tgz *.zip *.z *.Z *.rpm *.deb *.bz2

# [ftp]
#        path = /home/ftp
#        comment = ftp export area
port = 873
[data]
path = /data
read only = false
uid = root
hosts allow = cos7s01
timeout = 9999 transfer
logging = true

# Run lsyncd with rsh protocol
/usr/local/sbin/lsyncd -nodaemon /etc/lsyncd/cos7s01_cos7s02_rsync.conf

# Run lsyncd with ssh with sshpass - run_lsyncd.sh
#!/bin/bash

check_node_available(){
  for node in $1; do
    if ! timeout 3 ping -c1 $1 > /dev/null 2>&1; then
      echo "ERROR: $1: Ping failure"; return 1
    fi

    if ! timeout 3 sshpass -e ssh -o StrictHostKeyChecking=no "$login_username"@$1 "exit"; then
      echo "ERROR: $1: SSH failure."; return 1;
    fi
  done
}

get_credentials(){
  echo -ne "Enter sync username: "
  read login_username
  echo -ne "Enter sync password: "
  read -s SSHPASS
  export SSHPASS
  echo -ne "\n"
}

get_remote_node(){
  echo -ne "Enter target sync node: "
  read remote_node
}

if [ -z "$1" ] || ! [ -e "$1" ]; then
  echo "ERROR: Please pass in lsyncd configuration file. You passed in \"$1\""
  exit 1
fi

if ! which sshpass > /dev/null 2>&1; then
  echo "ERROR: Please install sshpass"
  exit 1
fi

if ! [ -e /usr/local/sbin/lsyncd ]; then
  echo "ERROR: Please install/compile lsyncd to /usr/local/sbin/lsyncd"
  exit 1
fi

if ! [ -e /usr/local/sbin/rsync ]; then
  echo "ERROR: Please install/compile rsync to /usr/local/sbin/rsync"
  exit 1
fi

get_credentials
get_remote_node

check_node_available "$remote_node"
if [ $? -ne 0 ]; then echo "ERROR: Failed to contact $remote_node"; exit 1; fi

env RSYNC_RSH="sshpass -p $SSHPASS ssh" /usr/local/sbin/lsyncd -nodaemon "$1"
